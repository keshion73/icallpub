{"remainingRequest":"C:\\Users\\ADMIN\\Documents\\카카오톡 받은 파일\\Archive\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ADMIN\\Documents\\카카오톡 받은 파일\\Archive\\src\\views\\Dashboard\\Dashboard.vue?vue&type=template&id=2131a5ef&","dependencies":[{"path":"C:\\Users\\ADMIN\\Documents\\카카오톡 받은 파일\\Archive\\src\\views\\Dashboard\\Dashboard.vue","mtime":1647445108000},{"path":"C:\\Users\\ADMIN\\Documents\\카카오톡 받은 파일\\Archive\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ADMIN\\Documents\\카카오톡 받은 파일\\Archive\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\ADMIN\\Documents\\카카오톡 받은 파일\\Archive\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ADMIN\\Documents\\카카오톡 받은 파일\\Archive\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}