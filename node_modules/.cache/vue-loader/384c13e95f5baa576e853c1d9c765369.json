{"remainingRequest":"C:\\workspace\\icallpub\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\workspace\\icallpub\\src\\views\\Dashboard\\Automotive.vue?vue&type=template&id=d40716ac&","dependencies":[{"path":"C:\\workspace\\icallpub\\src\\views\\Dashboard\\Automotive.vue","mtime":1647348644000},{"path":"C:\\workspace\\icallpub\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\workspace\\icallpub\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\workspace\\icallpub\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\workspace\\icallpub\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}