{"remainingRequest":"C:\\workspace\\icallpub\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\workspace\\icallpub\\src\\views\\Applications\\Widgets\\DatatableSimple.vue?vue&type=template&id=d1601a38&","dependencies":[{"path":"C:\\workspace\\icallpub\\src\\views\\Applications\\Widgets\\DatatableSimple.vue","mtime":1674895809000},{"path":"C:\\workspace\\icallpub\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\workspace\\icallpub\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\workspace\\icallpub\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\workspace\\icallpub\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXY+CiAgPHYtY2FyZCBjbGFzcz0iY2FyZC1zaGFkb3cgYm9yZGVyLXJhZGl1cy14bCI+CiAgICA8ZGl2IGNsYXNzPSJjYXJkLWhlYWRlci1wYWRkaW5nIiBzdHlsZT0icGFkZGluZy10b3A6IDEwcHg7Ij4KICAgICAgPGRpdiBjbGFzcz0iZC1mbGV4IGFsaWduLWNlbnRlciI+CiAgICAgICAgPCEtLSA8ZGl2PgogICAgICAgICAgPGg1IGNsYXNzPSJmb250LXdlaWdodC1ib2xkIHRleHQtaDUgdGV4dC10eXBvIG1iLTAiPgogICAgICAgICAgICBEYXRhdGFibGUgU2ltcGxlCiAgICAgICAgICA8L2g1PgogICAgICAgICAgPHAgY2xhc3M9InRleHQtc20gZm9udC13ZWlnaHQtbGlnaHQgdGV4dC1ib2R5IG1iLTAiPgogICAgICAgICAgICBGZWF0dXJlcyBpbmNsdWRlIHNvcnRpbmcsIHNlYXJjaGluZywgcGFnaW5hdGlvbiwgY29udGVudC1lZGl0aW5nLAogICAgICAgICAgICBhbmQgcm93IHNlbGVjdGlvbi4KICAgICAgICAgIDwvcD4KICAgICAgICA8L2Rpdj4gLS0+CgogICAgICAgIDx2LWRpYWxvZyB2LW1vZGVsPSJkaWFsb2ciIG1heC13aWR0aD0iNTAwcHgiPgogICAgICAgICAgPCEtLSA8dGVtcGxhdGUgdi1zbG90OmFjdGl2YXRvcj0ieyBvbiwgYXR0cnMgfSI+CiAgICAgICAgICAgIDx2LWJ0bgogICAgICAgICAgICAgIHYtYmluZD0iYXR0cnMiCiAgICAgICAgICAgICAgdi1vbj0ib24iCiAgICAgICAgICAgICAgZWxldmF0aW9uPSIwIgogICAgICAgICAgICAgIDpyaXBwbGU9ImZhbHNlIgogICAgICAgICAgICAgIGhlaWdodD0iNDMiCiAgICAgICAgICAgICAgY2xhc3M9IgogICAgICAgICAgICAgICAgZm9udC13ZWlnaHQtbm9ybWFsCiAgICAgICAgICAgICAgICB0ZXh0LWNhcGl0YWxpemUKICAgICAgICAgICAgICAgIG1zLWF1dG8KICAgICAgICAgICAgICAgIGJ0bi1wcmltYXJ5CiAgICAgICAgICAgICAgICBiZy1ncmFkaWVudC1wcmltYXJ5CiAgICAgICAgICAgICAgICBweS0zCiAgICAgICAgICAgICAgICBweC02CiAgICAgICAgICAgICAgICBtcy0zCiAgICAgICAgICAgICAgIgogICAgICAgICAgICAgID5OZXcgSXRlbTwvdi1idG4KICAgICAgICAgICAgPgogICAgICAgICAgPC90ZW1wbGF0ZT4gLS0+CiAgICAgICAgICA8di1jYXJkIGNsYXNzPSJjYXJkLXNoYWRvdyBib3JkZXItcmFkaXVzLXhsIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZC1oZWFkZXItcGFkZGluZyBjYXJkLWJvcmRlci1ib3R0b20iPgogICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJmb250LXdlaWdodC1ib2xkIHRleHQtaDUgdGV4dC10eXBvIG1iLTAiPnt7CiAgICAgICAgICAgICAgICBmb3JtVGl0bGUKICAgICAgICAgICAgICB9fTwvc3Bhbj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDx2LWNhcmQtdGV4dCBjbGFzcz0iY2FyZC1wYWRkaW5nIj4KICAgICAgICAgICAgICA8di1jb250YWluZXIgY2xhc3M9InB4LTAiPgogICAgICAgICAgICAgICAgPHYtcm93PgogICAgICAgICAgICAgICAgICA8di1jb2wgY29scz0iNiI+CiAgICAgICAgICAgICAgICAgICAgPHYtdGV4dC1maWVsZCB2LW1vZGVsPSJlZGl0ZWRJdGVtLm5hbWUiIGhpZGUtZGV0YWlscyBjbGFzcz0iCiAgICAgICAgICAgICAgICAgICAgICAgIGlucHV0LXN0eWxlCiAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZS1pbnB1dAogICAgICAgICAgICAgICAgICAgICAgICB0ZXh0LWxpZ2h0LWlucHV0CiAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyLWxpZ2h0CiAgICAgICAgICAgICAgICAgICAgICAgIGlucHV0LWljb24KICAgICAgICAgICAgICAgICAgICAgICIgZGVuc2UgZmxhdCBmaWxsZWQgc29sbyBoZWlnaHQ9IjQzIiBwbGFjZWhvbGRlcj0iTmFtZSI+PC92LXRleHQtZmllbGQ+CiAgICAgICAgICAgICAgICAgIDwvdi1jb2w+CiAgICAgICAgICAgICAgICAgIDx2LWNvbCBjb2xzPSI2Ij4KICAgICAgICAgICAgICAgICAgICA8di10ZXh0LWZpZWxkIHYtbW9kZWw9ImVkaXRlZEl0ZW0uZW1haWwiIGhpZGUtZGV0YWlscyBjbGFzcz0iCiAgICAgICAgICAgICAgICAgICAgICAgIGlucHV0LXN0eWxlCiAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZS1pbnB1dAogICAgICAgICAgICAgICAgICAgICAgICB0ZXh0LWxpZ2h0LWlucHV0CiAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyLWxpZ2h0CiAgICAgICAgICAgICAgICAgICAgICAgIGlucHV0LWljb24KICAgICAgICAgICAgICAgICAgICAgICIgZGVuc2UgZmxhdCBmaWxsZWQgc29sbyBoZWlnaHQ9IjQzIiBwbGFjZWhvbGRlcj0iRW1haWwiPjwvdi10ZXh0LWZpZWxkPgogICAgICAgICAgICAgICAgICA8L3YtY29sPgogICAgICAgICAgICAgICAgICA8di1jb2wgY29scz0iNiI+CiAgICAgICAgICAgICAgICAgICAgPHYtdGV4dC1maWVsZCB2LW1vZGVsPSJlZGl0ZWRJdGVtLmFnZSIgaGlkZS1kZXRhaWxzIGNsYXNzPSIKICAgICAgICAgICAgICAgICAgICAgICAgaW5wdXQtc3R5bGUKICAgICAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplLWlucHV0CiAgICAgICAgICAgICAgICAgICAgICAgIHRleHQtbGlnaHQtaW5wdXQKICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXItbGlnaHQKICAgICAgICAgICAgICAgICAgICAgICAgaW5wdXQtaWNvbgogICAgICAgICAgICAgICAgICAgICAgIiBkZW5zZSBmbGF0IGZpbGxlZCBzb2xvIGhlaWdodD0iNDMiIHBsYWNlaG9sZGVyPSJBZ2UiPjwvdi10ZXh0LWZpZWxkPgogICAgICAgICAgICAgICAgICA8L3YtY29sPgogICAgICAgICAgICAgICAgICA8di1jb2wgY29scz0iNiI+CiAgICAgICAgICAgICAgICAgICAgPHYtdGV4dC1maWVsZCB2LW1vZGVsPSJlZGl0ZWRJdGVtLnNhbGFyeSIgaGlkZS1kZXRhaWxzIGNsYXNzPSIKICAgICAgICAgICAgICAgICAgICAgICAgaW5wdXQtc3R5bGUKICAgICAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplLWlucHV0CiAgICAgICAgICAgICAgICAgICAgICAgIHRleHQtbGlnaHQtaW5wdXQKICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXItbGlnaHQKICAgICAgICAgICAgICAgICAgICAgICAgaW5wdXQtaWNvbgogICAgICAgICAgICAgICAgICAgICAgIiBkZW5zZSBmbGF0IGZpbGxlZCBzb2xvIGhlaWdodD0iNDMiIHBsYWNlaG9sZGVyPSJTYWxhcnkiPjwvdi10ZXh0LWZpZWxkPgogICAgICAgICAgICAgICAgICA8L3YtY29sPgogICAgICAgICAgICAgICAgPC92LXJvdz4KICAgICAgICAgICAgICA8L3YtY29udGFpbmVyPgogICAgICAgICAgICA8L3YtY2FyZC10ZXh0PgoKICAgICAgICAgICAgPHYtY2FyZC1hY3Rpb25zIGNsYXNzPSJjYXJkLXBhZGRpbmcgZC1mbGV4IGp1c3RpZnktZW5kIj4KICAgICAgICAgICAgICA8di1idG4gQGNsaWNrPSJjbG9zZSIgZWxldmF0aW9uPSIwIiA6cmlwcGxlPSJmYWxzZSIgaGVpZ2h0PSI0MyIgY2xhc3M9IgogICAgICAgICAgICAgICAgICBmb250LXdlaWdodC1ub3JtYWwKICAgICAgICAgICAgICAgICAgdGV4dC1jYXBpdGFsaXplCiAgICAgICAgICAgICAgICAgIGJ0bi1scyBidG4tc2Vjb25kYXJ5IGJ0bi1vdXRsaW5lLXNlY29uZGFyeQogICAgICAgICAgICAgICAgICBzaGFkb3ctbm9uZQogICAgICAgICAgICAgICAgICBiZy10cmFuc3BhcmVudAogICAgICAgICAgICAgICAgICBweS0zCiAgICAgICAgICAgICAgICAgIHB4LTYKICAgICAgICAgICAgICAgICI+Q2FuY2VsPC92LWJ0bj4KCiAgICAgICAgICAgICAgPHYtYnRuIEBjbGljaz0ic2F2ZSIgZWxldmF0aW9uPSIwIiA6cmlwcGxlPSJmYWxzZSIgaGVpZ2h0PSI0MyIgY2xhc3M9IgogICAgICAgICAgICAgICAgICBmb250LXdlaWdodC1ub3JtYWwKICAgICAgICAgICAgICAgICAgdGV4dC1jYXBpdGFsaXplCiAgICAgICAgICAgICAgICAgIGJ0bi1scyBidG4tcHJpbWFyeQogICAgICAgICAgICAgICAgICBiZy1ncmFkaWVudC1wcmltYXJ5CiAgICAgICAgICAgICAgICAgIHB5LTMKICAgICAgICAgICAgICAgICAgcHgtNgogICAgICAgICAgICAgICAgIj5TYXZlPC92LWJ0bj4KICAgICAgICAgICAgPC92LWNhcmQtYWN0aW9ucz4KICAgICAgICAgIDwvdi1jYXJkPgogICAgICAgIDwvdi1kaWFsb2c+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CgogICAgPHYtY2FyZC10ZXh0IGNsYXNzPSJweC0wIHB5LTAiPgogICAgICA8di1kYXRhLXRhYmxlIDpoZWFkZXJzPSJoZWFkZXJzIiA6aXRlbXM9InVzZXJzIiA6c2VhcmNoPSJzZWFyY2giIGNsYXNzPSJ0YWJsZSIgOnBhZ2Uuc3luYz0icGFnZSIKICAgICAgICBoaWRlLWRlZmF1bHQtZm9vdGVyIEBwYWdlLWNvdW50PSJwYWdlQ291bnQgPSAkZXZlbnQiIDppdGVtcy1wZXItcGFnZT0iaXRlbXNQZXJQYWdlIiBtb2JpbGUtYnJlYWtwb2ludD0iMCI+CiAgICAgICAgPHRlbXBsYXRlIHYtc2xvdDp0b3A+CiAgICAgICAgICA8di10b29sYmFyIGZsYXQgaGVpZ2h0PSIwIj4KICAgICAgICAgICAgPHYtZGlhbG9nIHYtbW9kZWw9ImRpYWxvZ0RlbGV0ZSIgbWF4LXdpZHRoPSI1MDBweCI+CiAgICAgICAgICAgICAgPHYtY2FyZCBjbGFzcz0iY2FyZC1zaGFkb3cgY2FyZC1wYWRkaW5nIGJvcmRlci1yYWRpdXMteGwiPgogICAgICAgICAgICAgICAgPHYtY2FyZC10aXRsZSBjbGFzcz0iCiAgICAgICAgICAgICAgICAgICAgcHQtMAogICAgICAgICAgICAgICAgICAgIHRleHQtaDUgdGV4dC10eXBvCiAgICAgICAgICAgICAgICAgICAgZm9udC13ZWlnaHQtbm9ybWFsCiAgICAgICAgICAgICAgICAgICAganVzdGlmeS1jZW50ZXIKICAgICAgICAgICAgICAgICAgIj5BcmUgeW91IHN1cmUgeW91IHdhbnQgdG8gZGVsZXRlIHRoaXMgaXRlbT88L3YtY2FyZC10aXRsZT4KICAgICAgICAgICAgICAgIDx2LWNhcmQtYWN0aW9ucyBjbGFzcz0icGItMCI+CiAgICAgICAgICAgICAgICAgIDx2LXNwYWNlcj48L3Ytc3BhY2VyPgogICAgICAgICAgICAgICAgICA8di1idG4gQGNsaWNrPSJjbG9zZURlbGV0ZSIgZWxldmF0aW9uPSIwIiA6cmlwcGxlPSJmYWxzZSIgaGVpZ2h0PSI0MyIgY2xhc3M9IgogICAgICAgICAgICAgICAgICAgICAgZm9udC13ZWlnaHQtbm9ybWFsCiAgICAgICAgICAgICAgICAgICAgICB0ZXh0LWNhcGl0YWxpemUKICAgICAgICAgICAgICAgICAgICAgIGJ0bi1scyBidG4tb3V0bGluZS1zZWNvbmRhcnkKICAgICAgICAgICAgICAgICAgICAgIGJnLXRyYW5zcGFyZW50CiAgICAgICAgICAgICAgICAgICAgICBweS0zCiAgICAgICAgICAgICAgICAgICAgICBweC02CiAgICAgICAgICAgICAgICAgICAgIj5DYW5jZWw8L3YtYnRuPgoKICAgICAgICAgICAgICAgICAgPHYtYnRuIEBjbGljaz0iZGVsZXRlSXRlbUNvbmZpcm0iIGVsZXZhdGlvbj0iMCIgOnJpcHBsZT0iZmFsc2UiIGhlaWdodD0iNDMiIGNsYXNzPSIKICAgICAgICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0LW5vcm1hbAogICAgICAgICAgICAgICAgICAgICAgdGV4dC1jYXBpdGFsaXplCiAgICAgICAgICAgICAgICAgICAgICBidG4tbHMgYnRuLXByaW1hcnkKICAgICAgICAgICAgICAgICAgICAgIGJnLWdyYWRpZW50LXByaW1hcnkKICAgICAgICAgICAgICAgICAgICAgIHB5LTMKICAgICAgICAgICAgICAgICAgICAgIHB4LTYKICAgICAgICAgICAgICAgICAgICAiPk9LPC92LWJ0bj4KICAgICAgICAgICAgICAgICAgPHYtc3BhY2VyPjwvdi1zcGFjZXI+CiAgICAgICAgICAgICAgICA8L3YtY2FyZC1hY3Rpb25zPgogICAgICAgICAgICAgIDwvdi1jYXJkPgogICAgICAgICAgICA8L3YtZGlhbG9nPgogICAgICAgICAgPC92LXRvb2xiYXI+CiAgICAgICAgPC90ZW1wbGF0ZT4KCiAgICAgICAgPHRlbXBsYXRlIHYtc2xvdDppdGVtLmlkPSJ7IGl0ZW0gfSI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJkLWZsZXggYWxpZ24tY2VudGVyIG1zLTIiPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0idGV4dC1zbSBmb250LXdlaWdodC1ub3JtYWwgdGV4dC1ib2R5Ij4KICAgICAgICAgICAgICB7eyBpdGVtLmlkIH19CiAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvdGVtcGxhdGU+CgogICAgICAgIDx0ZW1wbGF0ZSB2LXNsb3Q6aXRlbS5uYW1lPSJ7IGl0ZW0gfSI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJkLWZsZXggYWxpZ24tY2VudGVyIG1zLTIiPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0idGV4dC1zbSBmb250LXdlaWdodC1ub3JtYWwgdGV4dC1ib2R5Ij4KICAgICAgICAgICAgICB7eyBpdGVtLm5hbWUgfX0KICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC90ZW1wbGF0ZT4KCiAgICAgICAgPHRlbXBsYXRlIHYtc2xvdDppdGVtLmVtYWlsPSJ7IGl0ZW0gfSI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0idGV4dC1zbSBmb250LXdlaWdodC1ub3JtYWwgdGV4dC1ib2R5Ij4KICAgICAgICAgICAge3sgaXRlbS5lbWFpbCB9fQogICAgICAgICAgPC9zcGFuPgogICAgICAgIDwvdGVtcGxhdGU+CgogICAgICAgIDx0ZW1wbGF0ZSB2LXNsb3Q6aXRlbS5hZ2U9InsgaXRlbSB9Ij4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0ZXh0LXNtIGZvbnQtd2VpZ2h0LW5vcm1hbCB0ZXh0LWJvZHkiPgogICAgICAgICAgICB7eyBpdGVtLmFnZSB9fQogICAgICAgICAgPC9zcGFuPgogICAgICAgIDwvdGVtcGxhdGU+CgogICAgICAgIDx0ZW1wbGF0ZSB2LXNsb3Q6aXRlbS5zYWxhcnk9InsgaXRlbSB9Ij4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0ZXh0LXNtIGZvbnQtd2VpZ2h0LW5vcm1hbCB0ZXh0LWJvZHkiPgogICAgICAgICAgICB7eyBpdGVtLnNhbGFyeSB9fQogICAgICAgICAgPC9zcGFuPgogICAgICAgIDwvdGVtcGxhdGU+CgogICAgICAgIDx0ZW1wbGF0ZSB2LXNsb3Q6aXRlbS5hY3Rpb25zPSJ7IGl0ZW0gfSI+CiAgICAgICAgICA8di1idG4gQGNsaWNrPSJlZGl0SXRlbShpdGVtKSIgaWNvbiBlbGV2YXRpb249IjAiIDpyaXBwbGU9ImZhbHNlIiBoZWlnaHQ9IjI4IiBtaW4td2lkdGg9IjM2IiB3aWR0aD0iMzYiCiAgICAgICAgICAgIGNsYXNzPSJidG4tbHMgbWUtMiBteS0yIHJvdW5kZWQtc20iIGNvbG9yPSIjNjc3NDhlIj4KICAgICAgICAgICAgPHYtaWNvbiBzaXplPSIxNCIgY2xhc3M9Im1hdGVyaWFsLWljb25zLXJvdW5kIj5jb25zdHJ1Y3Rpb248L3YtaWNvbj4KICAgICAgICAgIDwvdi1idG4+CgogICAgICAgICAgPHYtYnRuIEBjbGljaz0iZGVsZXRlSXRlbShpdGVtKSIgaWNvbiBlbGV2YXRpb249IjAiIDpyaXBwbGU9ImZhbHNlIiBoZWlnaHQ9IjI4IiBtaW4td2lkdGg9IjM2IiB3aWR0aD0iMzYiCiAgICAgICAgICAgIGNsYXNzPSJidG4tbHMgbWUtMiBteS0yIHJvdW5kZWQtc20iIGNvbG9yPSIjNjc3NDhlIj4KICAgICAgICAgICAgPHYtaWNvbiBzaXplPSIxNCIgY2xhc3M9Im1hdGVyaWFsLWljb25zLXJvdW5kIj5jbG9zZTwvdi1pY29uPgogICAgICAgICAgPC92LWJ0bj4KICAgICAgICA8L3RlbXBsYXRlPgogICAgICA8L3YtZGF0YS10YWJsZT4KICAgIDwvdi1jYXJkLXRleHQ+CiAgICA8di1jYXJkLWFjdGlvbnMgY2xhc3M9ImNhcmQtcGFkZGluZyI+CiAgICAgIDx2LXJvdz4KICAgICAgICA8di1jb2wgY29scz0iNiIgbGc9IjMiIGNsYXNzPSJkLWZsZXggYWxpZ24tY2VudGVyIj4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0ZXh0LWJvZHkgbWUtMyB0ZXh0LXNtIj5JdGVtcyBwZXIgcGFnZTo8L3NwYW4+CiAgICAgICAgICA8di10ZXh0LWZpZWxkIGhpZGUtZGV0YWlscyB0eXBlPSJudW1iZXIiIG91dGxpbmVkIG1pbj0iLTEiIG1heD0iMTUiIGJhY2tncm91bmQtY29sb3I9InJnYmEoMjU1LDI1NSwyNTUsLjkpIgogICAgICAgICAgICBjb2xvcj0icmdiYSgwLDAsMCwuNikiIGxpZ2h0IDp2YWx1ZT0iaXRlbXNQZXJQYWdlIiBAaW5wdXQ9Iml0ZW1zUGVyUGFnZSA9IHBhcnNlSW50KCRldmVudCwgMTApIgogICAgICAgICAgICBwbGFjZWhvbGRlcj0iSXRlbXMgcGVyIHBhZ2UiIGNsYXNzPSIKICAgICAgICAgICAgICBmb250LXNpemUtaW5wdXQKICAgICAgICAgICAgICBwbGFjZWhvbGRlci1saWdodGVyCiAgICAgICAgICAgICAgdGV4dC1jb2xvci1saWdodAogICAgICAgICAgICAgIGlucHV0LWFsdGVybmF0aXZlIGlucHV0LWZvY3VzZWQtYWx0ZXJuYXRpdmUgaW5wdXQtaWNvbgogICAgICAgICAgICAiPgogICAgICAgICAgPC92LXRleHQtZmllbGQ+CiAgICAgICAgPC92LWNvbD4KICAgICAgICA8di1jb2wgY29scz0iNiIgY2xhc3M9Im1sLWF1dG8gZC1mbGV4IGp1c3RpZnktZW5kIj4KICAgICAgICAgIDx2LXBhZ2luYXRpb24gcHJldi1pY29uPSJmYSBmYS1hbmdsZS1sZWZ0IiBuZXh0LWljb249ImZhIGZhLWFuZ2xlLXJpZ2h0IiBjbGFzcz0icGFnaW5hdGlvbiIgY29sb3I9IiNEODFCNjAiCiAgICAgICAgICAgIHYtbW9kZWw9InBhZ2UiIDpsZW5ndGg9InBhZ2VDb3VudCIgY2lyY2xlPjwvdi1wYWdpbmF0aW9uPgogICAgICAgIDwvdi1jb2w+CiAgICAgIDwvdi1yb3c+CiAgICA8L3YtY2FyZC1hY3Rpb25zPgogIDwvdi1jYXJkPgo8L2Rpdj4K"},null]}